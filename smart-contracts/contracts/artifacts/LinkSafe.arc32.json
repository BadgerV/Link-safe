{
  "hints": {
    "createSafe(string,string,uint64,uint64)(address,string,uint64,uint64,uint64,bool)": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getVaultById(string)(address,string,uint64,uint64,uint64,bool)": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "SafeCount": {
          "type": "uint64",
          "key": "count"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "LinkSafe",
    "desc": "",
    "methods": [
      {
        "name": "createSafe",
        "args": [
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "owner",
            "type": "string"
          },
          {
            "name": "minimumBalance",
            "type": "uint64"
          },
          {
            "name": "created",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "(address,string,uint64,uint64,uint64,bool)"
        }
      },
      {
        "name": "getVaultById",
        "args": [
          {
            "name": "id",
            "type": "string"
          }
        ],
        "returns": {
          "type": "(address,string,uint64,uint64,uint64,bool)"
        }
      },
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}