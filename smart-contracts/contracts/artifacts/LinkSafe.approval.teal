#pragma version 10
intcblock 1
bytecblock 0x7661756c74 0x 0x636f756e74 0x151f7c75

// This TEAL was generated by TEALScript v0.105.3
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createSafe(string,string,uint64,uint64)(address,string,uint64,uint64,uint64,bool)
*abi_route_createSafe:
	// The ABI return prefix
	bytec 3 // 0x151f7c75

	// created: uint64
	txna ApplicationArgs 4
	btoi

	// minimumBalance: uint64
	txna ApplicationArgs 3
	btoi

	// owner: string
	txna ApplicationArgs 2
	extract 2 0

	// id: string
	txna ApplicationArgs 1
	extract 2 0

	// execute createSafe(string,string,uint64,uint64)(address,string,uint64,uint64,uint64,bool)
	callsub createSafe
	concat
	log
	intc 0 // 1
	return

// createSafe(id: string, owner: string, minimumBalance: uint64, created: uint64): SafeInfo
createSafe:
	proto 4 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	bytec 1 // 0x
	dup

	// contracts/link-safe.algo.ts:30
	// assert(!this.safes(id).exists, 'Vault already exists')
	bytec 0 //  "vault"
	frame_dig -1 // id: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	box_len
	swap
	pop
	!

	// Vault already exists
	assert

	// contracts/link-safe.algo.ts:34
	// vaultInfo: SafeInfo = {
	//             address: this.app.address,
	//             owner: owner,
	//             minimumBalance: minimumBalance,
	//             createdTimeStamp: created,
	//             lastUpdated: 0,
	//             isActive: true
	//         }
	bytec 1 //  initial head
	bytec 1 //  initial tail
	pushbytes 0x003a // initial head offset
	global CurrentApplicationAddress
	callsub *process_static_tuple_element
	frame_dig -2 // owner: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub *process_dynamic_tuple_element
	frame_dig -3 // minimumBalance: uint64
	itob
	callsub *process_static_tuple_element
	frame_dig -4 // created: uint64
	itob
	callsub *process_static_tuple_element
	pushbytes 0x0000000000000000
	callsub *process_static_tuple_element
	pushbytes 0x00
	pushint 0
	intc 0 // 1
	setbit
	callsub *process_static_tuple_element
	concat
	pop // pop head offset
	concat // concat head and tail
	frame_bury 0 // vaultInfo: SafeInfo

	// contracts/link-safe.algo.ts:44
	// this.safes(id).value = vaultInfo
	bytec 0 //  "vault"
	frame_dig -1 // id: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	dup
	box_del
	pop
	frame_dig 0 // vaultInfo: SafeInfo
	box_put

	// contracts/link-safe.algo.ts:47
	// currentCount = this.SafeCount.value
	bytec 2 //  "count"
	app_global_get
	frame_bury 1 // currentCount: uint64

	// contracts/link-safe.algo.ts:48
	// this.safeKeys(currentCount).value = id
	pushbytes 0x6b657973 // "keys"
	frame_dig 1 // currentCount: uint64
	itob
	concat
	dup
	box_del
	pop
	frame_dig -1 // id: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	box_put

	// contracts/link-safe.algo.ts:51
	// this.SafeCount.value = currentCount + 1
	bytec 2 //  "count"
	frame_dig 1 // currentCount: uint64
	intc 0 // 1
	+
	app_global_put

	// contracts/link-safe.algo.ts:52
	// return vaultInfo;
	frame_dig 0 // vaultInfo: SafeInfo

	// set the subroutine return value
	frame_bury 0

	// pop all local variables from the stack
	popn 1
	retsub

// getVaultById(string)(address,string,uint64,uint64,uint64,bool)
*abi_route_getVaultById:
	// The ABI return prefix
	bytec 3 // 0x151f7c75

	// id: string
	txna ApplicationArgs 1
	extract 2 0

	// execute getVaultById(string)(address,string,uint64,uint64,uint64,bool)
	callsub getVaultById
	concat
	log
	intc 0 // 1
	return

// getVaultById(id: string): SafeInfo
getVaultById:
	proto 1 1

	// contracts/link-safe.algo.ts:56
	// assert(this.safes(id).exists, 'Vault does not exist')
	bytec 0 //  "vault"
	frame_dig -1 // id: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	box_len
	swap
	pop

	// Vault does not exist
	assert

	// contracts/link-safe.algo.ts:57
	// return this.safes(id).value;
	bytec 0 //  "vault"
	frame_dig -1 // id: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	box_get

	// box value does not exist: this.safes(id).value
	assert
	retsub

*abi_route_createApplication:
	intc 0 // 1
	return

*create_NoOp:
	pushbytes 0xb8447b36 // method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x2dbadd9f // method "createSafe(string,string,uint64,uint64)(address,string,uint64,uint64,uint64,bool)"
	pushbytes 0xd3016cb7 // method "getVaultById(string)(address,string,uint64,uint64,uint64,bool)"
	txna ApplicationArgs 0
	match *abi_route_createSafe *abi_route_getVaultById

	// this contract does not implement the given ABI method for call NoOp
	err

*process_static_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -1 // element
	concat
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub

*process_dynamic_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -2 // head offset
	concat
	frame_bury -4 // tuple head
	frame_dig -1 // element
	dup
	len
	frame_dig -2 // head offset
	btoi
	+
	itob
	extract 6 2
	frame_bury -2 // head offset
	frame_dig -3 // tuple tail
	swap
	concat
	frame_bury -3 // tuple tail
	frame_dig -4 // tuple head
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub